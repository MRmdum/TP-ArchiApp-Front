On va travailler dans le fichier javascript script.js.

Écrivez une fonction qui calcule la factorielle d'un entier positif n:
?
1
2
3
4
5
function fact(n) {
 
   // code de la fonction
 
}

Utilisez votre fonction pour afficher la factorielle de 6 dans la console:
console.log("blah blah blah") imprime la chaine de caractère dans la console (en bas à droite dans repl.it)
Écrire une fonction applique qui prend en argument un tableau tab et une fonction f, et qui a le comportement suivant:
?
1
2
applique(f,[1,2,3]);
// retourne le tableau [f(1),f(2),f(3)]
Votre fonction pourrait ressembler à cela:
?
1
2
3
4
5
function applique(f, tab) {
 
   // code de la fonction
 
}

Utilisez les fonctions fact et applique pour faire la factorielle de tous les éléments d'un tableau:
?
1
applique(fact,[1,2,3,4,5,6]);

Utilisez applique à une fonction non-nommée:
?
1
applique(function(n) { return (n+1); } , [1,2,3,4,5,6]);
Essayez le code et assurez-vous de comprendre ce qui se passe.

Note
Si ça fonctionne, vous êtes prêt à travailler avec javascript.

3.2 - Un peu de dynamique dans la page
Dans votre fichier script.js, définissez la variable

?
1
2
3
4
5
msgs = [
  { "msg" : "Hello World" },
  { "msg" : "Blah Blah" },
  { "msg" : "I love cats" }
];

puis définissez une fonction update qui

prend en entrée un tableau avec la même structure que msgs
efface la liste des messages de la page
passe au travers du tableau et créée pour chaque élément un nouvel <li> avec le message correspondant.
Ensuite, ajoutez comme action à un click sur le bouton de la page l'appel à update(msgs).

Changez les valeurs du tableau et vérifiez que cliquer sur le bouton change les messages affichés en conséquence.

3.3 Un modèle un peu plus complet
Dans cette dernière partie, je vous demande de complexifier le modèle mis en oeuvre:

On veut pouvoir associer un pseudo à chaque message posté.
Il nous faut un bouton mise à jour qui réaffiche la liste des messages. En particulier, si on change dans la console javascript la variable msg, cela doit se répercuter sur la page en appuyant sur le bouton.
La structure de donnée msgs doit contenir en méta-donnée les dates de délivrance de chaque message, ainsi que le pseudo utisé pour cela. Vous avez le choix sur la mise en oeuvre de cela. Cela doit évidemment pouvoir se répercuter sur la page.
On veut quelque part sur la page la possibilité de changer le "style" de la page. Par exemple: on veut pouvoir passer d'un "style" clair à un "style" sombre.